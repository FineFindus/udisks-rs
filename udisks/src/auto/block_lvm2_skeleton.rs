// This file was generated by gir (https://github.com/gtk-rs/gir)
// from ..
// from ../gir-files
// DO NOT EDIT

use crate::{BlockLVM2};
use glib::{translate::*};

glib::wrapper! {
    #[doc(alias = "UDisksBlockLVM2Skeleton")]
    pub struct BlockLVM2Skeleton(Object<ffi::UDisksBlockLVM2Skeleton, ffi::UDisksBlockLVM2SkeletonClass>) @implements BlockLVM2;

    match fn {
        type_ => || ffi::udisks_block_lvm2_skeleton_get_type(),
    }
}

impl BlockLVM2Skeleton {
        pub const NONE: Option<&'static BlockLVM2Skeleton> = None;
    

    #[doc(alias = "udisks_block_lvm2_skeleton_new")]
    pub fn new() -> BlockLVM2Skeleton {
        assert_initialized_main_thread!();
        unsafe {
            from_glib_full(ffi::udisks_block_lvm2_skeleton_new())
        }
    }
}

impl Default for BlockLVM2Skeleton {
                     fn default() -> Self {
                         Self::new()
                     }
                 }
