// This file was generated by gir (https://github.com/gtk-rs/gir)
// from ..
// from ../gir-files
// DO NOT EDIT

use crate::{MDRaid};
use glib::{translate::*};

glib::wrapper! {
    #[doc(alias = "UDisksMDRaidSkeleton")]
    pub struct MDRaidSkeleton(Object<ffi::UDisksMDRaidSkeleton, ffi::UDisksMDRaidSkeletonClass>) @implements MDRaid;

    match fn {
        type_ => || ffi::udisks_mdraid_skeleton_get_type(),
    }
}

impl MDRaidSkeleton {
        pub const NONE: Option<&'static MDRaidSkeleton> = None;
    

    #[doc(alias = "udisks_mdraid_skeleton_new")]
    pub fn new() -> MDRaidSkeleton {
        assert_initialized_main_thread!();
        unsafe {
            from_glib_full(ffi::udisks_mdraid_skeleton_new())
        }
    }
}

impl Default for MDRaidSkeleton {
                     fn default() -> Self {
                         Self::new()
                     }
                 }
