// This file was generated by gir (https://github.com/gtk-rs/gir)
// from ..
// from ../gir-files
// DO NOT EDIT

use crate::{Swapspace};
use glib::{translate::*};

glib::wrapper! {
    #[doc(alias = "UDisksSwapspaceSkeleton")]
    pub struct SwapspaceSkeleton(Object<ffi::UDisksSwapspaceSkeleton, ffi::UDisksSwapspaceSkeletonClass>) @implements Swapspace;

    match fn {
        type_ => || ffi::udisks_swapspace_skeleton_get_type(),
    }
}

impl SwapspaceSkeleton {
        pub const NONE: Option<&'static SwapspaceSkeleton> = None;
    

    #[doc(alias = "udisks_swapspace_skeleton_new")]
    pub fn new() -> SwapspaceSkeleton {
        assert_initialized_main_thread!();
        unsafe {
            from_glib_full(ffi::udisks_swapspace_skeleton_new())
        }
    }
}

impl Default for SwapspaceSkeleton {
                     fn default() -> Self {
                         Self::new()
                     }
                 }
