// This file was generated by gir (https://github.com/gtk-rs/gir)
// from ..
// from ../gir-files
// DO NOT EDIT

use crate::{Manager};
use glib::{translate::*};

glib::wrapper! {
    #[doc(alias = "UDisksManagerSkeleton")]
    pub struct ManagerSkeleton(Object<ffi::UDisksManagerSkeleton, ffi::UDisksManagerSkeletonClass>) @implements Manager;

    match fn {
        type_ => || ffi::udisks_manager_skeleton_get_type(),
    }
}

impl ManagerSkeleton {
        pub const NONE: Option<&'static ManagerSkeleton> = None;
    

    #[doc(alias = "udisks_manager_skeleton_new")]
    pub fn new() -> ManagerSkeleton {
        assert_initialized_main_thread!();
        unsafe {
            from_glib_full(ffi::udisks_manager_skeleton_new())
        }
    }
}

impl Default for ManagerSkeleton {
                     fn default() -> Self {
                         Self::new()
                     }
                 }
